package kat.services;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import kat.project.*;

public class ClientManager {
	
	private Connection connection;

	private String url = "jdbc:hsqldb:hsql://localhost/workdb";

	private String createTableClient = "CREATE TABLE Client(id bigint GENERATED BY DEFAULT AS IDENTITY, name varchar(20), yob integer)";

	private PreparedStatement addClientStmt;
	private PreparedStatement deleteAllPersonsStmt;
	private PreparedStatement getAllClientsStmt;

	private Statement statement;
	
	public ClientManager() {
	try {
		connection = DriverManager.getConnection(url);
		statement = connection.createStatement();

		ResultSet rs = connection.getMetaData().getTables(null, null, null,
				null);
		boolean tableExists = false;
		while (rs.next()) {
			if ("Client".equalsIgnoreCase(rs.getString("TABLE_NAME"))) {
				tableExists = true;
				break;
			} 
		}
	

		if (!tableExists)
			statement.executeUpdate(createTableClient);

		addClientStmt = connection
				.prepareStatement("INSERT INTO Person (name, yob) VALUES (?, ?)");
		deleteAllPersonsStmt = connection
				.prepareStatement("DELETE FROM Person");
		getAllClientsStmt = connection
				.prepareStatement("SELECT id, name, yob FROM Person");

	} catch (SQLException e) {
		e.printStackTrace();
	}
}


Connection getConnection() {
	return connection;
}

void clearPersons() {
	try {
		deleteAllPersonsStmt.executeUpdate();
	} catch (SQLException e) {
		e.printStackTrace();
	}
}

public int addClient(Client client) {
	int count = 0;
	try {
		addClientStmt.setString(1, client.getName());
		addClientStmt.setString(2, client.getSurname());

		count = addClientStmt.executeUpdate();

	} catch (SQLException e) {
		e.printStackTrace();
	}
	return count;
}

public List<Client> getAllPersons() {
	List<Client> clients = new ArrayList<Client>();

	try {
		ResultSet rs = getAllClientsStmt.executeQuery();

		while (rs.next()) {
			Client c = new Client();
			c.setId(rs.getInt("id"));
			c.setName(rs.getString("name"));
			clients.add(c);
		}

	} catch (SQLException e) {
		e.printStackTrace();
	}
	return clients;
}


}
