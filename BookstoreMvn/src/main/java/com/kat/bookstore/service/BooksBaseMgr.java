package com.kat.bookstore.service;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import com.kat.bookstore.domain.*;

public class BooksBaseMgr {
	
	private Connection connect;

	private String url = "jdbc:hsqldb:hsql://localhost/workdb";

	private String createTableBook = "CREATE TABLE Book(id bigint GENERATED BY DEFAULT AS IDENTITY," +
			"				 title varchar(20), author varchar(20))";

	private PreparedStatement addBookStmt;
	private PreparedStatement deleteAllBooksStmt;
	private PreparedStatement getAllBooksStmt;

	private Statement statement;
	
	public BooksBaseMgr() {
	try {
		connect = DriverManager.getConnection(url);
		statement = connect.createStatement();

		ResultSet rs = connect.getMetaData().getTables(null, null, null, null);
		boolean tableExists = false;
		
		while (rs.next()) {
			if ("Book".equalsIgnoreCase(rs.getString("TABLE_NAME"))) {
				tableExists = true;
				break;
			} 
		}
	

		if (!tableExists) statement.executeUpdate(createTableBook);

		addBookStmt = connect.prepareStatement("INSERT INTO Book (title, author) VALUES (?, ?)");
		deleteAllBooksStmt = connect.prepareStatement("DELETE FROM Book");
		getAllBooksStmt = connect.prepareStatement("SELECT id, title, author FROM Book");

	} catch (SQLException e) {
		e.printStackTrace();
		}
	}


	Connection getConnection() {
		return connect;
	}

	void clearClients() {
		try {
			deleteAllBooksStmt.executeUpdate();
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}

	public int addBook(Book b) {
		int count = 0;
		try {
			addBookStmt.setString(1, b.getTitle());
			addBookStmt.setString(2, b.getAuthor());

			count = addBookStmt.executeUpdate();

		} catch (SQLException e) {
			e.printStackTrace();
		}
		return count;
	}
	

	public List<Book> getAllBooks() {
		List<Book> booklist = new ArrayList<Book>();

		try {
			ResultSet rs = getAllBooksStmt.executeQuery();

			while (rs.next()) {
				Book b = new Book();
				b.setId(rs.getInt("id"));
				b.setTitle(rs.getString("title"));
				b.setAuthor(rs.getString("author"));
				booklist.add(b);
			}

		} catch (SQLException e) {
			e.printStackTrace();
		}
		return booklist;
	}
}
